{"ast":null,"code":"var _jsxFileName = \"/Users/jccaballero/Documents/caballero-dev-projects/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Route, Routes } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCirclePlus } from \"@fortawesome/free-solid-svg-icons\";\nimport Side from \"./components/Side\";\nimport AddTaskList from \"./components/AddTaskList\";\nimport AddTask from \"./components/AddTask\";\nimport FilterTaskPage from \"./components/FilterTaskPage\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // LIST OF TASKS\n  // FIXME: list id of default list are not the same with the id of the list.\n  const [taskLists, setTaskLists] = useState([{\n    id: uuidv4(),\n    name: \"Important\",\n    tasks: [{\n      taskID: 0,\n      id: uuidv4(),\n      name: \"Fix Bed\",\n      done: false\n    }, {\n      taskID: 0,\n      id: uuidv4(),\n      name: \"Walk dog\",\n      done: true\n    }, {\n      taskID: 0,\n      id: uuidv4(),\n      name: \"Clean bathroom\",\n      done: false\n    }, {\n      taskID: 0,\n      id: uuidv4(),\n      name: \"Clean PC\",\n      done: false\n    }]\n  }]); // SET LIST ID\n\n  const [listID, setListID] = useState(\"\");\n\n  const getTaskID = id => {\n    // const listsCopy = [...taskLists];\n    // const list = listsCopy.filter((copy) => copy.id === id);\n    // const listObj = Object.assign({}, ...list);\n    // setTasks(listObj.tasks);\n    setListID(id);\n  }; // ADD TASK CATEGORY\n\n\n  const addNewTaskList = list => {\n    if (list) {\n      const taskCopy = [...taskLists, list];\n      setTaskLists(taskCopy);\n    }\n  }; // ADD MAIN TASKS\n\n\n  const addNewTask = (taskID, newTask) => {\n    if (newTask) {\n      const taskCopy = [...taskLists];\n      let allTasks = [];\n      let replaceTask = {};\n      taskCopy.forEach(copy => {\n        if (copy.id === taskID) {\n          allTasks = [...copy.tasks, ...newTask];\n          replaceTask = { ...copy,\n            tasks: allTasks\n          };\n        }\n      });\n      const index = taskCopy.findIndex(copy => copy.id === taskID);\n      taskCopy.splice(index, 1, replaceTask);\n      return setTaskLists(taskCopy);\n    }\n  }; // DELETE LIST TASK\n\n\n  const deleteList = taskID => {\n    const listCopy = [...taskLists];\n    const newList = listCopy.filter(list => list.id !== taskID);\n    setTaskLists(newList);\n  }; // DELETE TASK\n\n\n  const deleteTask = (taskID, id) => {\n    const listCopy = [...taskLists];\n    const newList = listCopy.filter(list => list.id === taskID).map(list => list.tasks).flat().filter(task => task.id !== id);\n    const index = listCopy.findIndex(copy => copy.id === taskID);\n    listCopy[index].tasks = newList;\n    setTaskLists(listCopy);\n  }; // CHECK AND UPDATE STATUS\n\n\n  const doneTasks = taskLists.map(task => task.tasks).flat().filter(task => task.status === \"done\");\n  const pendingTasks = taskLists.map(task => task.tasks).flat().filter(task => task.status === \"pending\"); // TOTAL COUNT OF PENDING TASKS\n\n  const [pendingCount, setPendingCount] = useState(pendingTasks.length);\n  useEffect(() => {\n    setPendingCount(pendingTasks.length);\n  }, [pendingTasks]);\n\n  const handleTaskStatus = (taskID, id) => {\n    let listCopy = [...taskLists];\n    const tasks = listCopy.filter(list => list.id === taskID).map(list => list.tasks).flat();\n    const index = tasks.findIndex(task => task.id === id);\n\n    if (tasks[index].status === \"done\") {\n      tasks[index].status = \"pending\";\n      return setTaskLists(listCopy);\n    }\n\n    if (tasks[index].status === \"pending\") {\n      tasks[index].status = \"done\";\n      return setTaskLists(listCopy);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"You have \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"total-task-count\",\n            children: [pendingCount, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 22\n          }, this), \"pending tasks\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), pendingCount != 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Let's do this!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 32\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add-task-list\",\n          children: [\"Add List \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCirclePlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskList\",\n          children: /*#__PURE__*/_jsxDEV(Side, {\n            taskLists: taskLists,\n            deleteList: deleteList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \":taskID\",\n          element: /*#__PURE__*/_jsxDEV(Main, {\n            taskLists: taskLists,\n            getTaskID: getTaskID,\n            handleTaskStatus: handleTaskStatus,\n            deleteTask: deleteTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-task-list\",\n          element: /*#__PURE__*/_jsxDEV(AddTaskList, {\n            id: uuidv4(),\n            addNewTaskList: addNewTaskList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-task\",\n          element: /*#__PURE__*/_jsxDEV(AddTask, {\n            tasks: taskLists,\n            id: uuidv4(),\n            listID: listID,\n            addNewTask: addNewTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \":taskID/:status\",\n          element: /*#__PURE__*/_jsxDEV(FilterTaskPage, {\n            tasks: taskLists,\n            handleTaskStatus: handleTaskStatus,\n            getTaskID: getTaskID,\n            deleteTask: deleteTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6sNqBblRCq5eAj5LlfLXVo9yiW0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Main","v4","uuidv4","Route","Routes","Link","FontAwesomeIcon","faCirclePlus","Side","AddTaskList","AddTask","FilterTaskPage","PageNotFound","App","taskLists","setTaskLists","id","name","tasks","taskID","done","listID","setListID","getTaskID","addNewTaskList","list","taskCopy","addNewTask","newTask","allTasks","replaceTask","forEach","copy","index","findIndex","splice","deleteList","listCopy","newList","filter","deleteTask","map","flat","task","doneTasks","status","pendingTasks","pendingCount","setPendingCount","length","handleTaskStatus"],"sources":["/Users/jccaballero/Documents/caballero-dev-projects/todo-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Route, Routes } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCirclePlus } from \"@fortawesome/free-solid-svg-icons\";\nimport Side from \"./components/Side\";\nimport AddTaskList from \"./components/AddTaskList\";\nimport AddTask from \"./components/AddTask\";\nimport FilterTaskPage from \"./components/FilterTaskPage\";\nimport PageNotFound from \"./components/PageNotFound\";\n\nfunction App() {\n  // LIST OF TASKS\n  // FIXME: list id of default list are not the same with the id of the list.\n\n  const [taskLists, setTaskLists] = useState([\n    {\n      id: uuidv4(),\n      name: \"Important\",\n\n      tasks: [\n        {\n          taskID: 0,\n          id: uuidv4(),\n          name: \"Fix Bed\",\n          done: false,\n        },\n        {\n          taskID: 0,\n          id: uuidv4(),\n          name: \"Walk dog\",\n          done: true,\n        },\n        {\n          taskID: 0,\n          id: uuidv4(),\n          name: \"Clean bathroom\",\n          done: false,\n        },\n        {\n          taskID: 0,\n          id: uuidv4(),\n          name: \"Clean PC\",\n          done: false,\n        },\n      ],\n    }\n   \n  ]);\n\n  // SET LIST ID\n  const [listID, setListID] = useState(\"\");\n  const getTaskID = (id) => {\n    // const listsCopy = [...taskLists];\n    // const list = listsCopy.filter((copy) => copy.id === id);\n    // const listObj = Object.assign({}, ...list);\n    // setTasks(listObj.tasks);\n    setListID(id);\n  };\n\n  // ADD TASK CATEGORY\n  const addNewTaskList = (list) => {\n    if (list) {\n      const taskCopy = [...taskLists, list];\n      setTaskLists(taskCopy);\n    }\n  };\n\n  // ADD MAIN TASKS\n  const addNewTask = (taskID, newTask) => {\n    if (newTask) {\n      const taskCopy = [...taskLists];\n      let allTasks = [];\n      let replaceTask = {};\n\n      taskCopy.forEach((copy) => {\n        if (copy.id === taskID) {\n          allTasks = [...copy.tasks, ...newTask];\n          replaceTask = { ...copy, tasks: allTasks };\n        }\n      });\n      const index = taskCopy.findIndex((copy) => copy.id === taskID);\n      taskCopy.splice(index, 1, replaceTask);\n      return setTaskLists(taskCopy);\n    }\n  };\n\n  // DELETE LIST TASK\n  const deleteList = (taskID) => {\n    const listCopy = [...taskLists];\n    const newList = listCopy.filter((list) => list.id !== taskID);\n    setTaskLists(newList);\n  };\n  // DELETE TASK\n  const deleteTask = (taskID, id) => {\n    const listCopy = [...taskLists];\n    const newList = listCopy\n      .filter((list) => list.id === taskID)\n      .map((list) => list.tasks)\n      .flat()\n      .filter((task) => task.id !== id);\n    const index = listCopy.findIndex((copy) => copy.id === taskID);\n    listCopy[index].tasks = newList;\n    setTaskLists(listCopy);\n  };\n  // CHECK AND UPDATE STATUS\n  const doneTasks = taskLists\n    .map((task) => task.tasks)\n    .flat()\n    .filter((task) => task.status === \"done\");\n\n  const pendingTasks = taskLists\n    .map((task) => task.tasks)\n    .flat()\n    .filter((task) => task.status === \"pending\");\n\n  // TOTAL COUNT OF PENDING TASKS\n  const [pendingCount, setPendingCount] = useState(pendingTasks.length);\n  useEffect(() => {\n    setPendingCount(pendingTasks.length);\n  }, [pendingTasks]);\n\n  const handleTaskStatus = (taskID, id) => {\n    let listCopy = [...taskLists];\n    const tasks = listCopy\n      .filter((list) => list.id === taskID)\n      .map((list) => list.tasks)\n      .flat();\n    const index = tasks.findIndex((task) => task.id === id);\n    if (tasks[index].status === \"done\") {\n      tasks[index].status = \"pending\";\n      return setTaskLists(listCopy);\n    }\n    if (tasks[index].status === \"pending\") {\n      tasks[index].status = \"done\";\n      return setTaskLists(listCopy);\n    }\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"grid\">\n        <div className=\"sidebar\">\n          <h1>\n            You have <span className=\"total-task-count\">{pendingCount} </span>\n            pending tasks\n          </h1>\n          {pendingCount != 0 ? <h1>Let's do this!</h1> : \"\"}\n          <hr></hr>\n          <Link to=\"/add-task-list\">\n            Add List <FontAwesomeIcon icon={faCirclePlus} />\n          </Link>\n          <div className=\"TaskList\">\n            <Side taskLists={taskLists} deleteList={deleteList} />\n          </div>\n        </div>\n        <Routes>\n          <Route\n            path=\":taskID\"\n            element={\n              <Main\n                taskLists={taskLists}\n                getTaskID={getTaskID}\n                handleTaskStatus={handleTaskStatus}\n                deleteTask={deleteTask}\n              />\n            }\n          ></Route>\n          <Route\n            path=\"/add-task-list\"\n            element={\n              <AddTaskList id={uuidv4()} addNewTaskList={addNewTaskList} />\n            }\n          />\n          <Route\n            path=\"/add-task\"\n            element={\n              <AddTask\n                tasks={taskLists}\n                id={uuidv4()}\n                listID={listID}\n                addNewTask={addNewTask}\n              />\n            }\n          />\n          <Route\n            path=\":taskID/:status\"\n            element={\n              <FilterTaskPage\n                tasks={taskLists}\n                handleTaskStatus={handleTaskStatus}\n                getTaskID={getTaskID}\n                deleteTask={deleteTask}\n              />\n            }\n          />\n          {/*FIXME: PageNotFound is not working <Route path=\"*\" element={<PageNotFound/>}/> */}\n        </Routes>\n\n        {/* <SideBar\n          taskLists={taskLists}\n          getTaskID={getTaskID}\n          taskCount={taskCount}\n        /> */}\n        {/* <Main subtasks={subTasks} task={taskProperty} taskCount={taskCount} /> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}