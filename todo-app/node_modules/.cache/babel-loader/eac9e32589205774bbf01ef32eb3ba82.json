{"ast":null,"code":"var _jsxFileName = \"/Users/jccaballero/Documents/caballero-dev-projects/todo-app/src/components/UpdateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateTask = _ref => {\n  _s();\n\n  let {\n    taskLists,\n    updateTask\n  } = _ref;\n  const navigate = useNavigate();\n  const taskCopy = [...taskLists];\n  const {\n    taskID,\n    id\n  } = useParams();\n  const taskToEdit = taskCopy.filter(copy => copy.id === taskID).map(task => task.tasks).flat().filter(task => task.id === id).flat();\n  const taskName = Object.assign({}, ...taskToEdit);\n  const [taskEdit, setTaskEdit] = useState(taskName.name);\n  const [newTask, setNewTask] = useState({\n    taskID: taskID,\n    id: id,\n    name: \"\",\n    status: \"pending\"\n  });\n\n  const getInput = e => {\n    e.preventDefault();\n    let input = e.target.value;\n    setTaskEdit(input);\n  };\n\n  const newTaskCopy = { ...newTask,\n    name: taskEdit\n  };\n  const duplicate = taskCopy.filter(copy => copy.id === taskID).map(task => task.tasks).flat().filter(task => task.name.toLowerCase().trim().replace(/[^\\w\\s]/gi, \"\") === newTaskCopy.name.toLowerCase().trim().replace(/[^\\w\\s]/gi, \"\"));\n\n  const saveEdit = () => {\n    if (duplicate.length) {\n      alert(\"This task already exists\");\n    } else if (newTaskCopy.trim() === \"\") {\n      alert(\"Please input a new name for the task\");\n      setNewTask({\n        taskID: taskID,\n        id: id,\n        name: taskName.name,\n        status: \"pending\"\n      });\n    } else {\n      updateTask(taskID, id, newTaskCopy);\n      navigate(`/all/${listID}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-title \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"UPDATE TASK:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            autocomplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"New Task Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: taskEdit,\n              onChange: getInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/all/\" + taskID,\n          className: \"modal-cancel\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-ok\",\n          onClick: saveEdit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), \" \", \"*\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateTask, \"mQWfn2xTHYViV+fKwueA72B7Vn4=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = UpdateTask;\nexport default UpdateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateTask\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","Link","UpdateTask","taskLists","updateTask","navigate","taskCopy","taskID","id","taskToEdit","filter","copy","map","task","tasks","flat","taskName","Object","assign","taskEdit","setTaskEdit","name","newTask","setNewTask","status","getInput","e","preventDefault","input","target","value","newTaskCopy","duplicate","toLowerCase","trim","replace","saveEdit","length","alert","listID"],"sources":["/Users/jccaballero/Documents/caballero-dev-projects/todo-app/src/components/UpdateTask.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nconst UpdateTask = ({ taskLists, updateTask }) => {\n  const navigate = useNavigate();\n  const taskCopy = [...taskLists];\n  const { taskID, id } = useParams();\n  const taskToEdit = taskCopy\n    .filter((copy) => copy.id === taskID)\n    .map((task) => task.tasks)\n    .flat()\n    .filter((task) => task.id === id)\n    .flat();\n  const taskName = Object.assign({}, ...taskToEdit);\n  const [taskEdit, setTaskEdit] = useState(taskName.name);\n  const [newTask, setNewTask] = useState({\n    taskID: taskID,\n    id: id,\n    name: \"\",\n    status: \"pending\",\n  });\n  const getInput = (e) => {\n    e.preventDefault();\n    let input = e.target.value;\n    setTaskEdit(input);\n  };\n  const newTaskCopy = { ...newTask, name: taskEdit };\n  const duplicate = taskCopy\n    .filter((copy) => copy.id === taskID)\n    .map((task) => task.tasks)\n    .flat()\n    .filter(\n      (task) =>\n        task.name\n          .toLowerCase()\n          .trim()\n          .replace(/[^\\w\\s]/gi, \"\") ===\n        newTaskCopy.name\n          .toLowerCase()\n          .trim()\n          .replace(/[^\\w\\s]/gi, \"\")\n    );\n  const saveEdit = () => {\n    if (duplicate.length) {\n      alert(\"This task already exists\");\n    } else if (newTaskCopy.trim() === \"\") {\n        alert(\"Please input a new name for the task\")\n      setNewTask({taskID: taskID,\n        id: id,\n        name: taskName.name,\n        status: \"pending\",})\n    }\n    else{\n        updateTask(taskID, id, newTaskCopy);\n        navigate(`/all/${listID}`);\n    }\n    \n  };\n\n  return (\n    <div className=\"overlay\">\n      <div className=\"modal\">\n        <div className=\"modal-title \">\n          <h1>UPDATE TASK:</h1>\n          <hr></hr>\n        </div>\n        <div className=\"modal-body\">\n          <div>\n            <form autocomplete=\"off\">\n              <label>New Task Name:</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={taskEdit}\n                onChange={getInput}\n              ></input>\n            </form>\n          </div>\n\n          <div></div>\n        </div>\n        <div className=\"modal-footer\">\n          <Link to={\"/all/\" + taskID} className=\"modal-cancel\">\n            Cancel\n          </Link>\n          <button className=\"modal-ok\" onClick={saveEdit}>\n            Save\n          </button>{\" \"}\n          *\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UpdateTask;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,cAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,UAAU,GAAG,QAA+B;EAAA;;EAAA,IAA9B;IAAEC,SAAF;IAAaC;EAAb,CAA8B;EAChD,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAMO,QAAQ,GAAG,CAAC,GAAGH,SAAJ,CAAjB;EACA,MAAM;IAAEI,MAAF;IAAUC;EAAV,IAAiBR,SAAS,EAAhC;EACA,MAAMS,UAAU,GAAGH,QAAQ,CACxBI,MADgB,CACRC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYD,MADb,EAEhBK,GAFgB,CAEXC,IAAD,IAAUA,IAAI,CAACC,KAFH,EAGhBC,IAHgB,GAIhBL,MAJgB,CAIRG,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAJb,EAKhBO,IALgB,EAAnB;EAMA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,GAAGT,UAArB,CAAjB;EACA,MAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAACkB,QAAQ,CAACK,IAAV,CAAxC;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC;IACrCS,MAAM,EAAEA,MAD6B;IAErCC,EAAE,EAAEA,EAFiC;IAGrCa,IAAI,EAAE,EAH+B;IAIrCG,MAAM,EAAE;EAJ6B,CAAD,CAAtC;;EAMA,MAAMC,QAAQ,GAAIC,CAAD,IAAO;IACtBA,CAAC,CAACC,cAAF;IACA,IAAIC,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASC,KAArB;IACAV,WAAW,CAACQ,KAAD,CAAX;EACD,CAJD;;EAKA,MAAMG,WAAW,GAAG,EAAE,GAAGT,OAAL;IAAcD,IAAI,EAAEF;EAApB,CAApB;EACA,MAAMa,SAAS,GAAG1B,QAAQ,CACvBI,MADe,CACPC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYD,MADd,EAEfK,GAFe,CAEVC,IAAD,IAAUA,IAAI,CAACC,KAFJ,EAGfC,IAHe,GAIfL,MAJe,CAKbG,IAAD,IACEA,IAAI,CAACQ,IAAL,CACGY,WADH,GAEGC,IAFH,GAGGC,OAHH,CAGW,WAHX,EAGwB,EAHxB,MAIAJ,WAAW,CAACV,IAAZ,CACGY,WADH,GAEGC,IAFH,GAGGC,OAHH,CAGW,WAHX,EAGwB,EAHxB,CAVY,CAAlB;;EAeA,MAAMC,QAAQ,GAAG,MAAM;IACrB,IAAIJ,SAAS,CAACK,MAAd,EAAsB;MACpBC,KAAK,CAAC,0BAAD,CAAL;IACD,CAFD,MAEO,IAAIP,WAAW,CAACG,IAAZ,OAAuB,EAA3B,EAA+B;MAClCI,KAAK,CAAC,sCAAD,CAAL;MACFf,UAAU,CAAC;QAAChB,MAAM,EAAEA,MAAT;QACTC,EAAE,EAAEA,EADK;QAETa,IAAI,EAAEL,QAAQ,CAACK,IAFN;QAGTG,MAAM,EAAE;MAHC,CAAD,CAAV;IAID,CANM,MAOH;MACApB,UAAU,CAACG,MAAD,EAASC,EAAT,EAAauB,WAAb,CAAV;MACA1B,QAAQ,CAAE,QAAOkC,MAAO,EAAhB,CAAR;IACH;EAEF,CAfD;;EAiBA,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,uBACE;MAAK,SAAS,EAAC,OAAf;MAAA,wBACE;QAAK,SAAS,EAAC,cAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UAAA,uBACE;YAAM,YAAY,EAAC,KAAnB;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cACE,IAAI,EAAC,MADP;cAEE,IAAI,EAAC,MAFP;cAGE,KAAK,EAAEpB,QAHT;cAIE,QAAQ,EAAEM;YAJZ;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAaE;UAAA;UAAA;UAAA;QAAA,QAbF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAoBE;QAAK,SAAS,EAAC,cAAf;QAAA,wBACE,QAAC,IAAD;UAAM,EAAE,EAAE,UAAUlB,MAApB;UAA4B,SAAS,EAAC,cAAtC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UAAQ,SAAS,EAAC,UAAlB;UAA6B,OAAO,EAAE6B,QAAtC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,EAMY,GANZ;MAAA;QAAA;QAAA;QAAA;MAAA,QApBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD,CA1FD;;GAAMlC,U;UACaH,W,EAEMC,S;;;KAHnBE,U;AA4FN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}