{"ast":null,"code":"var _jsxFileName = \"/Users/jccaballero/Documents/caballero-dev-projects/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Route, Routes } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCirclePlus } from \"@fortawesome/free-solid-svg-icons\";\nimport Side from \"./components/Side\";\nimport AddTaskList from \"./components/AddTaskList\";\nimport AddTask from \"./components/AddTask\";\nimport DoneTask from \"./components/DoneTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // LIST OF TASKS\n  const [taskLists, setTaskLists] = useState([{\n    id: uuidv4(),\n    name: \"Important\",\n    color: \"red\",\n    tasks: [{\n      taskID: 0,\n      id: uuidv4(),\n      name: \"Pay Bills\",\n      status: \"pending\"\n    }, {\n      taskID: 0,\n      id: uuidv4(),\n      name: \"Pay Rent\",\n      status: \"pending\"\n    }, {\n      taskID: 0,\n      id: uuidv4(),\n      name: \"Visit Clinic\",\n      status: \"done\"\n    }]\n  }, {\n    id: uuidv4(),\n    name: \"Work\",\n    color: \"yellow\",\n    tasks: [{\n      taskID: 0,\n      id: uuidv4(),\n      name: \"Add a feature\",\n      status: \"pending\"\n    }, {\n      taskID: 0,\n      id: uuidv4(),\n      name: \"Debug Code\",\n      status: \"done\"\n    }]\n  }, {\n    id: uuidv4(),\n    name: \"Travel\",\n    color: \"green\",\n    tasks: [{\n      taskID: 0,\n      id: uuidv4(),\n      name: \"Book a Ticket\",\n      status: \"pending\"\n    }]\n  }]);\n  let count = 0;\n  taskLists.forEach(list => {\n    count = list.map(task => task.tasks).r;\n  });\n  const [allCount, setAllCount] = useState(); // SET PARENT ID\n\n  const [listID, setListID] = useState(\"\");\n\n  const getTaskID = id => {\n    // const listsCopy = [...taskLists];\n    // const list = listsCopy.filter((copy) => copy.id === id);\n    // const listObj = Object.assign({}, ...list);\n    // setTasks(listObj.tasks);\n    setListID(id);\n  }; // ADD TASK CATEGORY\n\n\n  const addNewTaskList = taskList => {\n    const taskCopy = [...taskLists, taskList];\n    setTaskLists(taskCopy);\n  }; // ADD MAIN TASKS\n\n\n  const addNewTask = (taskID, newTask) => {\n    if (newTask) {\n      const taskCopy = [...taskLists];\n      let allTasks = [];\n      let replaceTask = {};\n      taskCopy.forEach(copy => {\n        if (copy.id === taskID) {\n          allTasks = [...copy.tasks, ...newTask];\n          replaceTask = { ...copy,\n            tasks: allTasks\n          };\n        }\n      });\n      const index = taskCopy.findIndex(copy => copy.id === taskID);\n      taskCopy.splice(index, 1, replaceTask);\n      return setTaskLists(taskCopy);\n    }\n  }; // DELETE TASK\n\n\n  const deleteTask = (taskID, id) => {\n    const listCopy = [...taskLists];\n    const newList = listCopy.filter(list => list.id === taskID).map(list => list.tasks).flat().filter(task => task.id !== id);\n    const index = listCopy.findIndex(copy => copy.id === taskID);\n    listCopy[index].tasks = newList;\n    setTaskLists(listCopy);\n  }; // CHECK AND UPDATE STATUS\n\n\n  const doneTasks = taskLists.map(task => task.tasks).flat().filter(task => task.status === \"done\");\n  const pendingTasks = taskLists.map(task => task.tasks).flat().filter(task => task.status === \"pending\");\n\n  const handleTaskStatus = (taskID, id) => {\n    let listCopy = [...taskLists];\n    const tasks = listCopy.filter(list => list.id === taskID).map(list => list.tasks).flat();\n    const index = tasks.findIndex(task => task.id === id);\n\n    if (tasks[index].status === \"done\") {\n      tasks[index].status = \"pending\";\n      return setTaskLists(listCopy);\n    }\n\n    if (tasks[index].status === \"pending\") {\n      tasks[index].status = \"done\";\n      return setTaskLists(listCopy);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"You have 20 tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Let's do this!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/add-task-list\",\n          children: [\"Add List \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCirclePlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskList\",\n          children: /*#__PURE__*/_jsxDEV(Side, {\n            taskLists: taskLists,\n            taskCount: taskCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \":taskID\",\n          element: /*#__PURE__*/_jsxDEV(Main, {\n            taskLists: taskLists,\n            getTaskID: getTaskID,\n            handleTaskStatus: handleTaskStatus,\n            deleteTask: deleteTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-task-list\",\n          element: /*#__PURE__*/_jsxDEV(AddTaskList, {\n            id: uuidv4(),\n            addNewTaskList: addNewTaskList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-task\",\n          element: /*#__PURE__*/_jsxDEV(AddTask, {\n            id: uuidv4(),\n            listID: listID,\n            addNewTask: addNewTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \":taskID/:status\",\n          element: /*#__PURE__*/_jsxDEV(DoneTask, {\n            tasks: taskLists,\n            handleTaskStatus: handleTaskStatus,\n            getTaskID: getTaskID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fDonWAJy57cpxDIE0w6lZsEU0kc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Main","v4","uuidv4","Route","Routes","Link","FontAwesomeIcon","faCirclePlus","Side","AddTaskList","AddTask","DoneTask","App","taskLists","setTaskLists","id","name","color","tasks","taskID","status","count","forEach","list","map","task","r","allCount","setAllCount","listID","setListID","getTaskID","addNewTaskList","taskList","taskCopy","addNewTask","newTask","allTasks","replaceTask","copy","index","findIndex","splice","deleteTask","listCopy","newList","filter","flat","doneTasks","pendingTasks","handleTaskStatus","taskCount"],"sources":["/Users/jccaballero/Documents/caballero-dev-projects/todo-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Route, Routes } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCirclePlus } from \"@fortawesome/free-solid-svg-icons\";\nimport Side from \"./components/Side\";\nimport AddTaskList from \"./components/AddTaskList\";\nimport AddTask from \"./components/AddTask\";\nimport DoneTask from \"./components/DoneTask\";\n\nfunction App() {\n  // LIST OF TASKS\n  const [taskLists, setTaskLists] = useState([\n    {\n      id: uuidv4(),\n      name: \"Important\",\n      color: \"red\",\n      tasks: [\n        {\n          taskID: 0,\n          id: uuidv4(),\n          name: \"Pay Bills\",\n          status: \"pending\",\n        },\n        {\n          taskID: 0,\n          id: uuidv4(),\n          name: \"Pay Rent\",\n          status: \"pending\",\n        },\n        {\n          taskID: 0,\n          id: uuidv4(),\n          name: \"Visit Clinic\",\n          status: \"done\",\n        },\n      ],\n    },\n    {\n      id: uuidv4(),\n      name: \"Work\",\n      color: \"yellow\",\n      tasks: [\n        {\n          taskID: 0,\n          id: uuidv4(),\n          name: \"Add a feature\",\n          status: \"pending\",\n        },\n        {\n          taskID: 0,\n          id: uuidv4(),\n          name: \"Debug Code\",\n          status: \"done\",\n        },\n      ],\n    },\n    {\n      id: uuidv4(),\n      name: \"Travel\",\n      color: \"green\",\n      tasks: [\n        {\n          taskID: 0,\n          id: uuidv4(),\n          name: \"Book a Ticket\",\n          status: \"pending\",\n        },\n      ],\n    },\n  ]);\n\n  let count = 0;\n  taskLists.forEach(list=>{\n    count = list.map(task=>task.tasks).r\n  })\n  const [allCount,setAllCount] = useState();\n\n\n  // SET PARENT ID\n  const [listID, setListID] = useState(\"\");\n  const getTaskID = (id) => {\n    // const listsCopy = [...taskLists];\n    // const list = listsCopy.filter((copy) => copy.id === id);\n    // const listObj = Object.assign({}, ...list);\n    // setTasks(listObj.tasks);\n    setListID(id);\n  };\n\n  // ADD TASK CATEGORY\n  const addNewTaskList = (taskList) => {\n    const taskCopy = [...taskLists, taskList];\n    setTaskLists(taskCopy);\n  };\n\n  // ADD MAIN TASKS\n  const addNewTask = (taskID, newTask) => {\n    if (newTask) {\n      const taskCopy = [...taskLists];\n      let allTasks = [];\n      let replaceTask = {};\n\n      taskCopy.forEach((copy) => {\n        if (copy.id === taskID) {\n          allTasks = [...copy.tasks, ...newTask];\n          replaceTask = { ...copy, tasks: allTasks };\n        }\n      });\n      const index = taskCopy.findIndex((copy) => copy.id === taskID);\n      taskCopy.splice(index, 1, replaceTask);\n      return setTaskLists(taskCopy);\n    }\n  };\n  // DELETE TASK\n  const deleteTask = (taskID, id) => {\n    const listCopy = [...taskLists];\n    const newList = listCopy\n      .filter((list) => list.id === taskID)\n      .map((list) => list.tasks)\n      .flat()\n      .filter((task) => task.id !== id);\n    const index = listCopy.findIndex((copy) => copy.id === taskID);\n    listCopy[index].tasks = newList;\n    setTaskLists(listCopy);\n  };\n  // CHECK AND UPDATE STATUS\n  const doneTasks = taskLists\n    .map((task) => task.tasks)\n    .flat()\n    .filter((task) => task.status === \"done\");\n  const pendingTasks = taskLists\n    .map((task) => task.tasks)\n    .flat()\n    .filter((task) => task.status === \"pending\");\n\n  const handleTaskStatus = (taskID, id) => {\n    let listCopy = [...taskLists];\n    const tasks = listCopy\n      .filter((list) => list.id === taskID)\n      .map((list) => list.tasks)\n      .flat();\n    const index = tasks.findIndex((task) => task.id === id);\n    if (tasks[index].status === \"done\") {\n      tasks[index].status = \"pending\";\n      return setTaskLists(listCopy);\n    }\n    if (tasks[index].status === \"pending\") {\n      tasks[index].status = \"done\";\n      return setTaskLists(listCopy);\n    }\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"grid\">\n        <div className=\"sidebar\">\n          <h1>You have 20 tasks</h1>\n          <h1>Let's do this!</h1>\n          <hr></hr>\n          <Link to=\"/add-task-list\">\n            Add List <FontAwesomeIcon icon={faCirclePlus} />\n          </Link>\n          <div className=\"TaskList\">\n            <Side taskLists={taskLists} taskCount={taskCount} />\n          </div>\n        </div>\n        <Routes>\n          <Route\n            path=\":taskID\"\n            element={\n              <Main\n                taskLists={taskLists}\n                \n                getTaskID={getTaskID}\n                handleTaskStatus={handleTaskStatus}\n                deleteTask={deleteTask}\n              />\n            }\n          ></Route>\n          <Route\n            path=\"/add-task-list\"\n            element={\n              <AddTaskList id={uuidv4()} addNewTaskList={addNewTaskList} />\n            }\n          />\n          <Route\n            path=\"/add-task\"\n            element={\n              <AddTask id={uuidv4()} listID={listID} addNewTask={addNewTask} />\n            }\n          />\n          <Route\n            path=\":taskID/:status\"\n            element={\n              <DoneTask\n                tasks={taskLists}\n                handleTaskStatus={handleTaskStatus}\n                getTaskID={getTaskID}\n              />\n            }\n          />\n        </Routes>\n\n        {/* <SideBar\n          taskLists={taskLists}\n          getTaskID={getTaskID}\n          taskCount={taskCount}\n        /> */}\n        {/* <Main subtasks={subTasks} task={taskProperty} taskCount={taskCount} /> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}